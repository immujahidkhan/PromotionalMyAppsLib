package com.justclack.promoappsimport android.content.Intentimport android.icu.util.TimeUnitimport android.net.Uriimport android.os.Bundleimport android.os.StrictModeimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.fragment.app.Fragmentimport androidx.recyclerview.widget.StaggeredGridLayoutManagerimport com.androidnetworking.AndroidNetworkingimport com.androidnetworking.common.Priorityimport com.androidnetworking.error.ANErrorimport com.androidnetworking.interfaces.JSONArrayRequestListenerimport com.google.gson.Gsonimport com.google.gson.reflect.TypeTokenimport com.justclack.promoapps.databinding.FragmentPromoAppAdsBindingimport org.json.JSONArrayimport java.lang.reflect.Typeprivate const val ARG_PARAM1 = "param1"private const val ARG_PARAM2 = "param2"class PromoAppAdsFragment : Fragment() {    private var param1: String? = null    private var param2: String? = null    lateinit var binding: FragmentPromoAppAdsBinding    lateinit var adapter: PromoAppAdapter    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        arguments?.let {            param1 = it.getString(ARG_PARAM1)            param2 = it.getString(ARG_PARAM2)        }        Constants.list = PoJo()        adapter = PromoAppAdapter(requireContext(), Constants.list)        val policy = StrictMode.ThreadPolicy.Builder().permitAll().build()        StrictMode.setThreadPolicy(policy)    }    override fun onCreateView(        inflater: LayoutInflater, container: ViewGroup?,        savedInstanceState: Bundle?    ): View {        binding = FragmentPromoAppAdsBinding.inflate(layoutInflater)        binding.recyclerView.hasFixedSize()        binding.recyclerView.layoutManager =            StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL)        binding.recyclerView.adapter = adapter        return binding.root    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        if (Constants.list.isEmpty()) {            AndroidNetworking.get(Constants.URL)                .setMaxAgeCacheControl(50 * 1024 * 1024, java.util.concurrent.TimeUnit.SECONDS)                .setPriority(Priority.LOW).responseOnlyFromNetwork                .build()                .getAsJSONArray(object : JSONArrayRequestListener {                    override fun onResponse(response: JSONArray) {                        val gson = Gson()                        Constants.list.clear()                        val listType: Type = object : TypeToken<ArrayList<PoJoItem>>() {}.type                        val posts: List<PoJoItem> = gson.fromJson(response.toString(), listType)                        for (data in posts) {                            if (!data.packageName.equals(requireActivity().packageName, true)) {                                Constants.list.add(data)                            }                        }                        adapter.notifyDataSetChanged()                    }                    override fun onError(error: ANError) {                        Log.d("Mujahid", "" + error)                    }                })        }        binding.adsInfo.setOnClickListener {            val contact = Intent(Intent.ACTION_SEND)            contact.data = Uri.parse("email")            contact.setPackage("com.google.android.gm")            val s = arrayOf(getString(R.string.contact_email))            contact.putExtra(Intent.EXTRA_EMAIL, s)            contact.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.subject))            contact.putExtra(Intent.EXTRA_TEXT, getString(R.string.msg_here))            contact.type = getString(R.string.type)            val chooser = Intent.createChooser(contact, getString(R.string.gopener))            startActivity(chooser)        }    }    companion object {        @JvmStatic        fun newInstance(param1: String, param2: String) =            PromoAppAdsFragment().apply {                arguments = Bundle().apply {                    putString(ARG_PARAM1, param1)                    putString(ARG_PARAM2, param2)                }            }    }}