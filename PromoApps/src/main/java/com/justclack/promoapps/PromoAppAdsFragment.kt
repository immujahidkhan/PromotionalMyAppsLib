package com.justclack.promoappsimport android.os.Bundleimport android.os.StrictModeimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.fragment.app.Fragmentimport androidx.recyclerview.widget.GridLayoutManagerimport androidx.recyclerview.widget.LinearLayoutManagerimport com.androidnetworking.AndroidNetworkingimport com.androidnetworking.common.Priorityimport com.androidnetworking.error.ANErrorimport com.androidnetworking.interfaces.JSONArrayRequestListenerimport com.google.gson.Gsonimport com.google.gson.reflect.TypeTokenimport com.justclack.promoapps.databinding.FragmentPromoAppAdsBindingimport org.json.JSONArrayimport java.lang.reflect.Typeprivate const val ARG_PARAM1 = "param1"private const val ARG_PARAM2 = "param2"class PromoAppAdsFragment : Fragment() {    private var param1: String? = null    private var param2: String? = null    lateinit var binding: FragmentPromoAppAdsBinding    lateinit var adapter: PromoAppAdapter    lateinit var list: PoJo    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        arguments?.let {            param1 = it.getString(ARG_PARAM1)            param2 = it.getString(ARG_PARAM2)        }        list = PoJo()        adapter = PromoAppAdapter(requireContext(), list)        val policy = StrictMode.ThreadPolicy.Builder().permitAll().build()        StrictMode.setThreadPolicy(policy)    }    override fun onCreateView(        inflater: LayoutInflater, container: ViewGroup?,        savedInstanceState: Bundle?    ): View {        binding = FragmentPromoAppAdsBinding.inflate(layoutInflater)        binding.recyclerView.hasFixedSize()        binding.recyclerView.layoutManager =            GridLayoutManager(requireContext(), 2)        binding.recyclerView.adapter = adapter        return binding.root    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        AndroidNetworking.get(Constants.URL)            .setPriority(Priority.LOW)            .build()            .getAsJSONArray(object : JSONArrayRequestListener {                override fun onResponse(response: JSONArray) {                    Log.d("Mujahid", "" + response)                    val gson = Gson()                    val listType: Type = object : TypeToken<ArrayList<PoJoItem>>() {}.type                    val posts: List<PoJoItem> = gson.fromJson(response.toString(), listType)                    list.addAll(posts)                    adapter.notifyDataSetChanged()                }                override fun onError(error: ANError) {                    Log.d("Mujahid", "" + error)                }            })    }    companion object {        @JvmStatic        fun newInstance(param1: String, param2: String) =            PromoAppAdsFragment().apply {                arguments = Bundle().apply {                    putString(ARG_PARAM1, param1)                    putString(ARG_PARAM2, param2)                }            }    }}